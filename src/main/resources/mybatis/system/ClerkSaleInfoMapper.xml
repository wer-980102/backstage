<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.client.mapper.ClerkSaleInfoMapper">

    <resultMap type="ClerkSaleInfo" id="ClerkSaleInfoResult">
        <result property="saleId"    column="sale_id"    />
        <result property="modelNumber"    column="model_number"    />
        <result property="productName"    column="product_name"    />
        <result property="brand"    column="brand"    />
        <result property="customerId"    column="customer_id"    />
        <result property="customer"    column="customer"    />
        <result property="userId"    column="user_id"    />
        <result property="sales"    column="sales"    />
        <result property="store"    column="store"    />
        <result property="refundAmount"    column="refund_amount"    />
        <result property="actualSales"    column="actual_sales"    />
        <result property="lastGoods"    column="last_goods"    />
        <result property="goodsFrequency"    column="goods_frequency"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectClerkSaleInfoVo">
        select sale_id, model_number, product_name, brand, customer_id, customer,user_id, sales, store, refund_amount, actual_sales, last_goods, goods_frequency, create_by, create_time, update_by, update_time from clerk_sale_info
    </sql>

    <select id="selectClerkSaleInfoList" parameterType="ClerkSaleInfo" resultMap="ClerkSaleInfoResult">
        <include refid="selectClerkSaleInfoVo"/>
        <where>
            <if test="modelNumber != null  and modelNumber != ''"> and model_number = #{modelNumber}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="brand != null  and brand != ''"> and brand = #{brand}</if>
            <if test="customerId != null "> and customer_id = #{customerId}</if>
            <if test="customer != null  and customer != ''"> and customer = #{customer}</if>
            <if test="sales != null  and sales != ''"> and sales = #{sales}</if>
            <if test="store != null  and store != ''"> and store = #{store}</if>
            <if test="refundAmount != null  and refundAmount != ''"> and refund_amount = #{refundAmount}</if>
            <if test="actualSales != null  and actualSales != ''"> and actual_sales = #{actualSales}</if>
            <if test="lastGoods != null  and lastGoods != ''"> and last_goods = #{lastGoods}</if>
            <if test="goodsFrequency != null  and goodsFrequency != ''"> and goods_frequency = #{goodsFrequency}</if>
        </where>
    </select>

    <select id="selectClerkSaleInfoById" parameterType="Long" resultMap="ClerkSaleInfoResult">
        <include refid="selectClerkSaleInfoVo"/>
        where sale_id = #{saleId}
    </select>

    <select id="getClerkSaleInfo" parameterType="java.lang.String" resultMap="ClerkSaleInfoResult">
        <include refid="selectClerkSaleInfoVo"/>
        <where>
            <if test="customer != null  and customer != ''"> and customer = #{customer}</if>
        </where>
    </select>

    <select id="getActualSalesInfo" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            sum(actual_sales) as actualSales
        from clerk_sale_info
        where customer_id = #{customerId}
    </select>

    <select id="getLastGoodsInfo" parameterType="java.lang.String" resultType="ClerkSaleInfoDto">
        SELECT customer_id AS customerId, max( last_goods ) AS lastGoods FROM clerk_sale_info where customer_id = #{customerId} GROUP BY customerId
    </select>

    <insert id="insertClerkSaleInfo" parameterType="ClerkSaleInfo" useGeneratedKeys="true" keyProperty="saleId">
        insert into clerk_sale_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="modelNumber != null">model_number,</if>
            <if test="productName != null and productName != ''">product_name,</if>
            <if test="brand != null">brand,</if>
            <if test="customerId != null">customer_id,</if>
            <if test="customer != null">customer,</if>
            <if test="userId != null">user_id,</if>
            <if test="sales != null">sales,</if>
            <if test="store != null">store,</if>
            <if test="refundAmount != null">refund_amount,</if>
            <if test="actualSales != null">actual_sales,</if>
            <if test="lastGoods != null and lastGoods != ''">last_goods,</if>
            <if test="goodsFrequency != null">goods_frequency,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="modelNumber != null">#{modelNumber},</if>
            <if test="productName != null and productName != ''">#{productName},</if>
            <if test="brand != null">#{brand},</if>
            <if test="customerId != null">#{customerId},</if>
            <if test="customer != null">#{customer},</if>
            <if test="userId != null">#{userId},</if>
            <if test="sales != null">#{sales},</if>
            <if test="store != null">#{store},</if>
            <if test="refundAmount != null">#{refundAmount},</if>
            <if test="actualSales != null">#{actualSales},</if>
            <if test="lastGoods != null and lastGoods != ''">#{lastGoods},</if>
            <if test="goodsFrequency != null">#{goodsFrequency},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateClerkSaleInfo" parameterType="ClerkSaleInfo">
        update clerk_sale_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="modelNumber != null">model_number = #{modelNumber},</if>
            <if test="productName != null and productName != ''">product_name = #{productName},</if>
            <if test="brand != null">brand = #{brand},</if>
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="customer != null">customer = #{customer},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="sales != null">sales = #{sales},</if>
            <if test="store != null">store = #{store},</if>
            <if test="refundAmount != null">refund_amount = #{refundAmount},</if>
            <if test="actualSales != null">actual_sales = #{actualSales},</if>
            <if test="lastGoods != null">last_goods = #{lastGoods},</if>
            <if test="goodsFrequency != null">goods_frequency = #{goodsFrequency},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where sale_id = #{saleId}
    </update>

    <update id="updateClerkSaleByCustomerId" parameterType="ClerkSaleInfo">
        update clerk_sale_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="modelNumber != null">model_number = #{modelNumber},</if>
            <if test="productName != null and productName != ''">product_name = #{productName},</if>
            <if test="brand != null">brand = #{brand},</if>
            <if test="customer != null">customer = #{customer},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="sales != null">sales = #{sales},</if>
            <if test="store != null">store = #{store},</if>
            <if test="refundAmount != null">refund_amount = #{refundAmount},</if>
            <if test="actualSales != null">actual_sales = #{actualSales},</if>
            <if test="lastGoods != null">last_goods = #{lastGoods},</if>
            <if test="goodsFrequency != null">goods_frequency = #{goodsFrequency},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where customer_id = #{customerId}
    </update>
    <delete id="deleteClerkSaleInfoById" parameterType="Long">
        delete from clerk_sale_info where sale_id = #{saleId}
    </delete>

    <delete id="deleteClerkSaleInfoByIds" parameterType="String">
        delete from clerk_sale_info where sale_id in
        <foreach item="saleId" collection="array" open="(" separator="," close=")">
            #{saleId}
        </foreach>
    </delete>

</mapper>
