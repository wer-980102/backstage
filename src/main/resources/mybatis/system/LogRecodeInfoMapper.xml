<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.target.mapper.LogRecodeInfoMapper">

    <resultMap type="LogRecodeInfo" id="LogRecodeInfoResult">
        <result property="recodeId"    column="recode_id"    />
        <result property="cardId"    column="card_id"    />
        <result property="studyCategory"    column="study_category"    />
        <result property="studyStatus"    column="study_status"    />
        <result property="studyTime"    column="study_time"    />
        <result property="studyExpect"    column="study_expect"    />
        <result property="status"    column="status"    />
        <result property="remarks"    column="remarks"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectLogRecodeInfoVo">
        select recode_id, card_id, study_category, study_status, study_time, study_expect, punch,status, remarks, create_by, create_time, update_by, update_time from log_recode_info
    </sql>

    <select id="selectLogRecodeInfoList" parameterType="LogRecodeInfo" resultMap="LogRecodeInfoResult">
        <include refid="selectLogRecodeInfoVo"/>
        <where> status = '0'
            <if test="cardId != null "> and card_id = #{cardId}</if>
            <if test="studyCategory != null  and studyCategory != ''"> and study_category = #{studyCategory}</if>
            <if test="studyStatus != null  and studyStatus != ''"> and study_status = #{studyStatus}</if>
            <if test="studyTime != null "> and study_time = #{studyTime}</if>
            <if test="studyExpect != null  and studyExpect != ''"> and study_expect = #{studyExpect}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="remarks != null  and remarks != ''"> and remarks = #{remarks}</if>
        </where>
    </select>

    <select id="getLogRecodeInfo" parameterType="LogRecodeInfo" resultType="LogRecodeInfoDto">
        SELECT
            lri.recode_id AS recodeId,
            lri.card_id AS cardId,
            lri.study_category AS studyCategory,
            lri.study_status AS studyStatus,
            lri.study_time AS studyTime,
            lri.study_expect AS studyExpect,
            uci.study_title AS studyTitle,
            uci.preparation_time AS preparationTime,
            uci.target_time AS targetTime,
            lri.create_time as createTime
        FROM
            log_recode_info lri
                INNER JOIN user_card_info uci ON lri.card_id = uci.card_id
        <where>
            lri.STATUS = '0' AND lri.STATUS = '0'
            <if test="userId != null "> and uci.user_id = #{userId}</if>
            <if test="cardId != null "> and lri.card_id = #{cardId}</if>
            <if test="studyCategory != null  and studyCategory != ''"> and study_category = #{studyCategory}</if>
            <if test="studyExpect != null  and studyExpect != ''"> and study_expect = #{studyExpect}</if>
        </where>
    </select>

    <select id="selectLogRecodeInfoById" parameterType="Long" resultType="LogRecodeInfoDto">
        SELECT
            lri.recode_id AS recodeId,
            lri.card_id AS cardId,
            lri.study_category AS studyCategory,
            lri.study_status AS studyStatus,
            lri.study_time AS studyTime,
            lri.study_expect AS studyExpect,
            uci.study_title AS studyTitle,
            uci.preparation_time AS preparationTime,
            uci.target_time AS targetTime,
            lri.create_time as createTime
        FROM
            log_recode_info lri
                INNER JOIN user_card_info uci ON lri.card_id = uci.card_id
        where lri.recode_id = #{recodeId}
    </select>

    <select id="getUserCardById" parameterType="UserCardInfoParam" resultType="UserCardInfoDto">
        select
            card_id as cardId,
            study_title as studyTitle
        from user_card_info
        <where>
        <if test="cardId != null">
            AND card_id = #{cardId}
        </if>
        <if test="userId != null and userId != 0">
            AND user_id = #{userId}
        </if>
        </where>
    </select>

    <select id="getUserCardInfo" parameterType="UserCardInfo" resultType="UserCardInfoDto">
        select
        card_id as cardId,
        study_title as studyTitle
        from user_card_info
        <where>
            <if test="cardId != null"> AND card_id = #{cardId}</if>
            <if test="userId != null and userId != 0">
                AND user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="getUserCardByName" parameterType="UserCardInfoParam" resultType="String">
        select
            study_title
        from user_card_info
        where  card_id =#{cardId}  and study_title = #{studyTitle}
    </select>

    <insert id="insertLogRecodeInfo" parameterType="LogRecodeInfo" useGeneratedKeys="true" keyProperty="recodeId">
        insert into log_recode_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cardId != null">card_id,</if>
            <if test="studyCategory != null">study_category,</if>
            <if test="studyStatus != null">study_status,</if>
            <if test="studyTime != null">study_time,</if>
            <if test="studyExpect != null">study_expect,</if>
            <if test="status != null">status,</if>
            <if test="remarks != null">remarks,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cardId != null">#{cardId},</if>
            <if test="studyCategory != null">#{studyCategory},</if>
            <if test="studyStatus != null">#{studyStatus},</if>
            <if test="studyTime != null">#{studyTime},</if>
            <if test="studyExpect != null">#{studyExpect},</if>
            <if test="status != null">#{status},</if>
            <if test="remarks != null">#{remarks},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateLogRecodeInfo" parameterType="LogRecodeInfo">
        update log_recode_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="cardId != null">card_id = #{cardId},</if>
            <if test="studyCategory != null">study_category = #{studyCategory},</if>
            <if test="studyStatus != null">study_status = #{studyStatus},</if>
            <if test="studyTime != null">study_time = #{studyTime},</if>
            <if test="studyExpect != null">study_expect = #{studyExpect},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where recode_id = #{recodeId}
    </update>

    <update id="updateLogRecodeStudyExpect" parameterType="LogRecodeInfo">
        update log_recode_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="studyExpect != null">study_expect = #{studyExpect},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where recode_id = #{recodeId}
    </update>

    <update id="updateLogRecodeStatus" parameterType="LogRecodeInfo">
        update log_recode_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where recode_id = #{recodeId}
    </update>

    <update id="updatePunch" parameterType="LogRecodeInfo">
        update log_recode_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">punch = #{punch},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where recode_id = #{recodeId}
    </update>

    <delete id="deleteLogRecodeInfoById" parameterType="Long">
        delete from log_recode_info where recode_id = #{recodeId}
    </delete>

    <delete id="deleteLogRecodeInfoByIds" parameterType="String">
        delete from log_recode_info where recode_id in
        <foreach item="recodeId" collection="array" open="(" separator="," close=")">
            #{recodeId}
        </foreach>
    </delete>

</mapper>
